#!/bin/bash -e

  # Obtain parameters
  output_file=$1
  error_file=$2
  target_log_folder=$3

  # Log files
  runtime_log="${target_log_folder}/runtime.log"
  resources_log="${target_log_folder}/resources.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f "${output_file}" ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 "${output_file}")
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
        exit 1
     fi
  else
     echo "[ERROR] Output file not found" | tee -a "${output_file}"
     exit 1
  fi
  # Check that ErrorManager has not raised any ERROR or FATAL message
  if [ -f "${error_file}" ]; then
    if grep -E "\\[ERRMGR\\].*(ERROR|FATAL|Shutting down COMPSs)" "${error_file}"; then
      echo "ERROR: ErrorManager has raised a fatal error" | tee -a "${output_file}"
      exit 1
    fi
  else
    # Empty error file, no exceptions could have been raised
    :
  fi
  # Check that the Runtime has not registered any fatal error
  if [ -f "${runtime_log}" ]; then
    if grep -E "ErrorManager\\].*\\[ERRMGR\\].*Error detected. Shutting down COMPSs" "${runtime_log}"; then
      echo "ERROR: ErrorManager has registered a fatal error in the runtime.log" | tee -a "${output_file}"
      exit 1
    fi
  else
    echo "[ERROR] runtime.log not found" | tee -a "${output_file}"
    exit 1
  fi

  #----------------------------------------------------------------------------------
  # Compute result status
  init_counter=$(grep "Initial counter value" "${output_file}" | cut -c 26-)
  final_counter_got=$(grep "Final counter value" "${output_file}" | cut -c 24-)
  final_counter_expected=$((init_counter+2))
  if [ "$final_counter_got" != "$final_counter_expected" ]; then
    echo "ERROR ON TASKS SCHEDULE" | tee -a "${output_file}"
    echo "EXPECTED FIRST INCREMENT: $final_counter_expected" | tee -a "${output_file}"
    echo "GOT:      $final_counter_got" | tee -a "${output_file}"
    exit 1
  fi
  
  lot_expected=1
  lot_got=$(grep "CMD" "${runtime_log}" | grep "Limit Of Tasks" | awk '{ print $NF }')
  if [ "${lot_expected}" != "${lot_got}" ]; then
    echo "ERROR ON LIMIT OF TASKS" | tee -a "${output_file}"
    echo "EXPECTED: ${lot_expected}" | tee -a "${output_file}"
    echo "GOT: ${lot_got}" | tee -a "${output_file}"
    exit 1
  fi
  
  # All OK
  exit 0