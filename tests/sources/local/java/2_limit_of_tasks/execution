#!/bin/bash

  # Obtain parameters
  COMPSs_exec=$1
  comm=$2
  runcompss_opts=$3
  base_app_dir=$4
  COMPSs_log_folder=$5
  target_log_folder=$6
  retry_num=$7
  execution_envs=$8
  
  # Global variables
  exit_value=1
  jar_name="2_limit_of_tasks.jar"
  app_name="limitOfTasks.Main"
  
  #----------------------------------------------------------------------------------
  # Generate Project.xml according to system
  sed -i '/<InstallDir>/c<InstallDir>'"${COMPSS_HOME}"'<\/InstallDir>' "${base_app_dir}"/project.xml
  
  #----------------------------------------------------------------------------------
  # Create all working dir folders
  mkdir -p /tmp/COMPSsWorker01/
  
  #----------------------------------------------------------------------------------
  # Run application
  echo
  echo "*** RUNNING JAVA APPLICATION LIMIT OF TASKS"
  output_log="${target_log_folder}/limitOfTasks_0${retry_num}.outputlog"
  error_log="${target_log_folder}/limitOfTasks_0${retry_num}.errorlog"
  expectedTime=60s
  
  # shellcheck disable=SC2086
  timeout --signal=2 $expectedTime "${COMPSs_exec}" \
     --project="${base_app_dir}"/project.xml \
     --resources="${base_app_dir}"/resources.xml \
     \
     --comm="$comm" \
     \
     --debug \
     --summary \
     ${runcompss_opts} \
     \
     --classpath="${base_app_dir}/${jar_name}" \
     \
     "${app_name}" 1 > >(tee "${output_log}") 2> >(tee "${error_log}" >&2)
  
  # Check timeout
  if [[ "$?" = "124" ]]; then
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}/${app_name}_0${retry_num}"/* "${target_log_folder}"
     
     # Report time out
     echo "[WARNING] Java Application timed out" >> "${output_log}"
     exit_value=124
  else
     # Copy LOG files
     cp -rf "${COMPSs_log_folder}/${app_name}_0${retry_num}"/* "${target_log_folder}"
  
     # Check result
     "${base_app_dir}"/result "${output_log}" "${error_log}" "${target_log_folder}"
     exit_value=$?
  fi
  
  #----------------------------------------------------------------------------------
  # Return execution status
  exit ${exit_value}