#!/bin/bash -e

  # Obtain parameters
  output_file=$1
  error_file=$2
  target_log_folder=$3
  base_app_dir=$4

  # Log files
  runtime_log="${target_log_folder}/runtime.log"
  resources_log="${target_log_folder}/resources.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f "${output_file}" ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 "${output_file}")
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
        exit 1
     fi
  else
     echo "[ERROR] Output file not found" | tee -a "${output_file}"
     exit 1
  fi
  # Check that ErrorManager has not raised any ERROR or FATAL message
  if [ -f "${error_file}" ]; then
    if grep -E "\\[ERRMGR\\].*(ERROR|FATAL|Shutting down COMPSs)" "${error_file}"; then
      echo "ERROR: ErrorManager has raised a fatal error" | tee -a "${output_file}"
      exit 1
    fi
  else
    # Empty error file, no exceptions could have been raised
    :
  fi
  # Check that the Runtime has not registered any fatal error
  if [ -f "${runtime_log}" ]; then
    if grep -E "ErrorManager\\].*\\[ERRMGR\\].*Error detected. Shutting down COMPSs" "${runtime_log}"; then
      echo "ERROR: ErrorManager has registered a fatal error in the runtime.log" | tee -a "${output_file}"
      exit 1
    fi
  else
    echo "[ERROR] runtime.log not found" | tee -a "${output_file}"
    exit 1
  fi

  #----------------------------------------------------------------------------------
  # Compute result status
  if [ -f "${base_app_dir}"/counter_IN ]; then
    echo "ERROR WAS FOUND. counter_IN FILE STILL EXISTS." | tee -a "${output_file}"
    exit 1
  elif [ -f "${base_app_dir}"/counter_OUT ]; then
  	echo "ERROR WAS FOUND. counter_OUT FILE STILL EXISTS." | tee -a "${output_file}"
    exit 2
  elif [ -f "${base_app_dir}"/counter_INOUT ]; then
  	echo "ERROR WAS FOUND. counter_INOUT FILE STILL EXISTS." | tee -a "${output_file}"
    exit 3
  elif [ -f "${base_app_dir}"/counter_IN_0 ]; then
  	echo "ERROR WAS FOUND. counter_IN_0 FILE STILL EXISTS." | tee -a "${output_file}"
    exit 4
  elif [ -f "${base_app_dir}"/counter_IN_1 ]; then
  	echo "ERROR WAS FOUND. counter_IN_1 FILE STILL EXISTS." | tee -a "${output_file}"
    exit 4
  elif [ -f "${base_app_dir}"/counter_IN_2 ]; then
  	echo "ERROR WAS FOUND. counter_IN_2 FILE STILL EXISTS." | tee -a "${output_file}"
    exit 4
  else
    echo "FILE HAS BEEN REMOVED." | tee -a "${output_file}"
  fi

  #---------------------------------------------------------------------------------- 
  # Everything ok
  exit 0