#!/bin/bash

  ##############################################
  # Helper methods
  ##############################################
  updateBest() {
    bestActionScore=$1
    bestResourceScore=$2
    bestWaitingScore=$3
    bestImplScore=$4
    bestResourceId=$5
  }


  ##############################################
  # MAIN
  ##############################################
  runtimelog=$1

  scoresList=$(grep -E -A 4 "Scheduling.*execution:" "$runtimelog")
  
  while read -r line; do
    # PARSE LINE
    taskId=$(echo "$line" | tr "," " " | tr " " "\\t" | awk '{ print $10 }')
    
    # Next 4 lines are the resources
    i=0
    bestActionScore="null"
    bestResourceScore=0
    bestWaitingScore=0
    bestImplScore=0
    bestResourceId="null"
    while [ $i -lt 4 ]; do
      i=$((i+1))
      read -r resource
      if [ "$(grep -E -c "\[Task [0-9]*\] Resource" <<< ${resource})" == "0" ]; then
        continue;
      fi
      
      # Get scores 
      resourceId=$(echo "$resource" | tr " " "\\t" | awk '{ print $4 }')
      actionScore=$(echo "$resource" | tr " " "\\t" | awk '{ print $8 }')
      resourceScore=0
      waitingScore=0
      implScore=0
      if [ "$actionScore" != "null" ] && [ "$actionScore" != "" ]; then
        actionScore=$(echo "$resource" | tr "," " " | tr " " "\\t"  | awk '{ print $11 }')
        resourceScore=$(echo "$resource" | tr "," " " | tr " " "\\t"  | awk '{ print $15 }')
        waitingScore=$(echo "$resource" | tr "," " " | tr " " "\\t"  | awk '{ print $17 }')
        implScore=$(echo "$resource" | tr "," " " | tr "]" " " | tr " " "\\t"  | awk '{ print $19 }')
      fi
      
      # Update best
      if [ "$actionScore" != "null" ] && [ "$actionScore" != "" ]; then
        if [ "$bestActionScore" == "null" ]; then
          updateBest "$actionScore" "$resourceScore" "$waitingScore" "$implScore" "$resourceId"
        else
          as_gt=$(echo "$actionScore > $bestActionScore" | bc -l)
          as_eq=$(echo "$actionScore == $bestActionScore" | bc -l)
          if [ "$as_gt" -eq 1 ]; then
            updateBest "$actionScore" "$resourceScore" "$waitingScore" "$implScore" "$resourceId"
          elif [ "$as_eq" -eq 1 ]; then
            rs_gt=$(echo "$resourceScore > $bestResourceScore" | bc -l)
            rs_eq=$(echo "$resourceScore == $bestResourceScore" | bc -l)
            if [ "$rs_gt" -eq 1 ]; then
              updateBest "$actionScore" "$resourceScore" "$waitingScore" "$implScore" "$resourceId"
            elif [ "$rs_eq" -eq 1 ]; then
            
              ws_gt=$(echo "$waitingScore > $bestWaitingScore" | bc -l)
              ws_eq=$(echo "$waitingScore == $bestWaitingScore" | bc -l)
              if [ "$ws_gt" -eq 1 ]; then
              	updateBest "$actionScore" "$resourceScore" "$waitingScore" "$implScore" "$resourceId"
              elif [ "$ws_eq" -eq 1 ]; then
              	is_gt=$(echo "$implScore > $bestImplScore" | bc -l)
              	if [ "$is_gt" -eq 1 ]; then
                	updateBest "$actionScore" "$resourceScore" "$waitingScore" "$implScore" "$resourceId"
              	fi
              fi
            fi
          fi
        fi
      fi
    done
    
    # If task had no resource, look for forced schedule message
    if [ "$bestActionScore" == "null" ]; then
      bestResourceId=$(grep -E "Schedule action ExecutionAction \\(Task ${taskId},.*on resource " "$runtimelog" | awk '{ print $NF }')
    fi
    
    # Print result
    echo "$taskId $bestResourceId"

    # Skip grep sep line
    # shellcheck disable=SC2034
    read -r skip
  done <<< "$scoresList"
  
  # End
  exit 0
  
