#!/bin/bash -e

  # Obtain parameters
  output_file=$1
  error_file=$2
  target_log_folder=$3

  # Log files
  runtime_log="${target_log_folder}/runtime.log"
  resources_log="${target_log_folder}/resources.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f "${output_file}" ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 "${output_file}")
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
        exit 1
     fi
  else
     echo "[ERROR] Output file not found" | tee -a "${output_file}"
     exit 1
  fi
  # Check that ErrorManager has not raised any ERROR or FATAL message
  if [ -f "${error_file}" ]; then
    if grep -E "\\[ERRMGR\\].*(ERROR|FATAL|Shutting down COMPSs)" "${error_file}"; then
      echo "ERROR: ErrorManager has raised a fatal error" | tee -a "${output_file}"
      exit 1
    fi
  else
    # Empty error file, no exceptions could have been raised
    :
  fi
  # Check that the Runtime has not registered any fatal error
  if [ -f "${runtime_log}" ]; then
    if grep -E "ErrorManager\\].*\\[ERRMGR\\].*Error detected. Shutting down COMPSs" "${runtime_log}"; then
      echo "ERROR: ErrorManager has registered a fatal error in the runtime.log" | tee -a "${output_file}"
      exit 1
    fi
  else
    echo "[ERROR] runtime.log not found" | tee -a "${output_file}"
    exit 1
  fi

  #----------------------------------------------------------------------------------
  # Compute result status
  types_expected="java.lang.String boolean char java.lang.String byte short int long float double"
  values_expected="true E My Test 7 77 777 7777 7.7 7.77777"
  types_params=$(grep "Parameter types:" "${target_log_folder}"/jobs/job1_NEW.out | cut -c 22-)
  values_params=$(grep "Parameter values:" "${target_log_folder}"/jobs/job1_NEW.out | rev | cut -c -40 | rev)

  # Report result status
  exit_value=0
  if [ "$types_params" != "$types_expected" ]; then
     echo "ERROR ON PARAMETER TYPES" | tee -a "${output_file}"
     echo "EXPECTED: $types_expected" | tee -a "${output_file}"
     echo "GOT:      $types_params" | tee -a "${output_file}"
     exit_value=1
  fi
  if [ "$values_params" != "$values_expected" ]; then
     echo "ERROR ON PARAMETER VALUES" | tee -a "${output_file}"
     echo "EXPECTED: $values_expected" | tee -a "${output_file}"
     echo "GOT:      $values_params" | tee -a "${output_file}"
     exit_value=2
  fi
  
  exit ${exit_value}