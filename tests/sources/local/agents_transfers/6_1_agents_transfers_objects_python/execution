#!/bin/bash

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

# Obtain parameters
COMPSs_exec=$1
comm=$2
runcompss_opts=$3
base_app_dir=$4
COMPSs_log_folder=$5
target_log_folder=$6
retry_num=$7
execution_envs=$8

# Global variables
AGENT_PIDS=""
app_name="6_1_agents_transfers_objects_python"
expected_time="30s"
RESULT_IDENTIFIER="printing matrix"

# Traps and Handlers
function kill_agents() {
    for pid in ${AGENT_PIDS}; do
        if kill $pid > /dev/null 2>&1; then
            echo "[ERROR] Agent failed to stop"
        fi
    done
}
trap kill_agents EXIT


echo ""
echo "*** RUNNING AGENTS TEST: $app_name"
log_dir="${COMPSs_log_folder}/${app_name}_0${retry_num}/"
mkdir -p "${log_dir}"
output_log="${log_dir}test.outputlog"
error_log="${log_dir}test.errorlog"
touch "${output_log}"
touch "${error_log}"


#Agent execution
agent1_log_dir="${log_dir}/COMPSsWorker01/"
mkdir -p "${agent1_log_dir}"
compss_agent_start_service \
  --pythonpath="${base_app_dir}/src" \
  --log_dir="${log_dir}" \
  --rest_port="46101" \
  --comm_port="46102" \
  -d \
  --exec_time=${expected_time} \
  ${runcompss_opts} \
  --project="${base_app_dir}/project.xml" \
  --resources="${base_app_dir}/resources.xml" \
  --lang="PYTHON" \
  --method_name="main_agents" \
  "single_object"

python3 ${base_app_dir}/src/single_object.py > ${COMPSs_log_folder}/results_sequential_execution.out
if [ $? != 0 ]; then
  echo -e '\033[0;31m'"[ ERROR ] Couldn't execute sequential version of the test"
  exit 1
fi

grep "${RESULT_IDENTIFIER}" ${COMPSs_log_folder}/results_sequential_execution.out | while read -r line; do
  seq_result=$(grep -A 5 "$line" ${COMPSs_log_folder}/results_sequential_execution.out)
  agent_result=$(grep -A 5 -R --no-filename "$line" ${log_dir}/*/jobs/*.out)

  if [ "$seq_result" != "$agent_result" ] ; then
    echo -e '\033[0;31m'"[ ERROR ] The results were not the same in the agent execution and in sequential"'\033[0m'
    echo "review results for label \"$line\""
    exit 1
  fi
done
loop_result=$?

if [ $loop_result == 0 ] ; then
  echo -e '\033[0;32m'"[ OK ] The results are correct"'\033[0m'
else
  exit 1
fi

# Copy LOG files
cp -rf "${COMPSs_log_folder}/${app_name}_0${retry_num}"/* "${target_log_folder}"
