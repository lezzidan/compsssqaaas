#!/bin/bash -e

  # Obtain parameters
  output_file=$1
  error_file=$2
  target_log_folder=$3

  # Log files
  runtime_log="${target_log_folder}/runtime.log"
  resources_log="${target_log_folder}/resources.log"

  # Default checker (application ends with : Error running application)
  if [ -f "${output_file}" ]; then
     result_expected="Error running application"
     test_result=$(tail -n 1 < "${error_file}" )
     result_found=$(echo "${test_result}" | grep -c "${result_expected}")
     if [ ! "${result_found}" == "1" ]; then
        echo "[ERROR] SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
        exit 1
     fi
  else
     echo "[ERROR] Output file not found" | tee -a "${output_file}"
     exit 1
  fi

  # Check that ErrorManager has raised any ERROR or FATAL message
  if [ -f "${error_file}" ]; then
    if grep -E "\\[ERRMGR\\].*(ERROR|FATAL|Shutting down COMPSs)" "${error_file}"; then
       echo "[RESULT_CHECKER] ErrorManager raised and ERROR as expected" | tee -a "${output_file}"
    else
      echo "[ERROR] ErrorManager did not raise any error" | tee -a "${output_file}"
      exit 1
    fi
  else
    echo "[ERROR] ErrorManager did not raise any error" | tee -a "${output_file}"
    exit 1
  fi
  # Check that the Runtime has registered any fatal error
  if [ -f "${runtime_log}" ]; then
    if grep -E "ErrorManager\\].*\\[ERRMGR\\].*Error detected. Shutting down COMPSs" "${runtime_log}"; then
      echo "[RESULT_CHECKER] ErrorManager registered an ERROR as expected" | tee -a "${output_file}"
    else
      echo "[ERROR] ErrorManager did not register any error" | tee -a "${output_file}"
      exit 1
    fi
  else
    echo "[ERROR] runtime.log not found" | tee -a "${output_file}"
    exit 1
  fi

  # Test ok
  echo "Test OK"
  exit 0