#!/bin/bash -e

  # Obtain parameters
  output_file=$1
  error_file=$2
  target_log_folder=$3
  executions_per_task=$4

  # Log files
  runtime_log="${target_log_folder}/runtime.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f "${output_file}" ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 "${output_file}")
     if [ "${result_expected}" != "${test_result}" ]; then
        echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
        exit 1
     fi
  else
     echo "[ERROR] Output file not found" | tee -a "${output_file}"
     exit 2
  fi
  # Check that ErrorManager has not raised any ERROR or FATAL message
  if [ -f "${error_file}" ]; then
    if grep -E "\\[ERRMGR\\].*(ERROR|FATAL|Shutting down COMPSs)" "${error_file}"; then
      echo "ERROR: ErrorManager has raised a fatal error" | tee -a "${output_file}"
      exit 3
    fi
  fi
  # Check that the Runtime has not registered any fatal error
  if [ -f "${runtime_log}" ]; then
    if grep -E "ErrorManager\\].*\\[ERRMGR\\].*Error detected. Shutting down COMPSs" "${runtime_log}"; then
      echo "ERROR: ErrorManager has registered a fatal error in the runtime.log" | tee -a "${output_file}"
      exit 4
    fi
  else
    echo "[ERROR] runtime.log not found" | tee -a "${output_file}"
    exit 5
  fi
  echo "Evaluating generated trace"
  #---------------------------------------------------------------------------------- 
  # Compute result status
  num_different_tasks=4
  total_num_tasks=$((num_different_tasks * executions_per_task))
  finish_events=${total_num_tasks}

  events_type1=$(grep -c ":8000000:1" "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  events_type2=$(grep -c ":8000000:2" "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  events_type3=$(grep -c ":8000000:3" "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  events_type4=$(grep -c ":8000000:4" "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  events_close=$(grep -c ":8000000:0" "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)

  if [ "$events_type1" != "$executions_per_task" ]; then
     echo "[ERROR] Incorrect number of task 1 events. [$events_type1/$executions_per_task]" | tee -a "${output_file}"
     exit 5
  fi
  if [ "$events_type2" != "$executions_per_task" ]; then
     echo "[ERROR] Incorrect number of task 2 events. [$events_type2/$executions_per_task]" | tee -a "${output_file}"
     exit 6
  fi
  if [ "$events_type3" != "$executions_per_task" ]; then 
     echo "[ERROR] Incorrect number of task 3 events. [$events_type3/$executions_per_task]" | tee -a "${output_file}"
     exit 7
  fi
  if [ "$events_type4" != "$executions_per_task" ]; then 
     echo "[ERROR] Incorrect number of task 4 events. [$events_type4/$executions_per_task]" | tee -a "${output_file}"
     exit 8
  fi
  if [ "$events_close" != "$finish_events" ] ; then
     echo "[ERROR] Incorrect number of finished task events. [$events_close/$finish_events]" | tee -a "${output_file}"
     exit 9
  fi
  echo " Checking if all events have been ended"
  start_events_8000000=$(grep -c ':8000000:[1-9][0-9]*' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  end_events_8000000=$(grep -c ':8000000:0' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  start_events_8001001=$(grep -c ':8001001:[1-9][0-9]*' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  end_events_8001001=$(grep -c ':8001001:0' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  start_events_8001002=$(grep -c ':8001002:[1-9][0-9]*' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  end_events_8001002=$(grep -c ':8001002:0' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  start_events_8000002=$(grep -c ':8000002:[1-9][0-9]*' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  end_events_8000002=$(grep -c ':8000002:0' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  start_events_8000003=$(grep -c ':8000003:[1-9][0-9]*' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  end_events_8000003=$(grep -c ':8000003:0' "${target_log_folder}"/trace/tracing.BasicTracing_test_compss*.prv)
  echo " Checking 8000000 events"
  if [ "$start_events_8000000" != "$end_events_8000000" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8000000 type of events" | tee -a "${output_file}"
    exit 1 
  fi
  echo " Checking 8001001 events"
  if [ "$start_events_8001001" != "$end_events_8001001" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8001001 type of events" | tee -a "${output_file}"
    exit 2
  fi
  echo " Checking 8001002 events"
  if [ "$start_events_8001002" != "$end_events_8001002" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8001002 type of events" | tee -a "${output_file}"
    exit 2
  fi
  echo " Checking 8000002 events"
  if [ "$start_events_8000002" != "$end_events_8000002" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8000002 type of events" | tee -a "${output_file}"
    exit 3
  fi
  echo " Checking 8000003 events"
  if [ "$start_events_8000003" != "$end_events_8000003" ] ; then
    echo "[ERROR] Number of start and end emits is not equal for 8000003 type of events" | tee -a "${output_file}"
    exit 4
  fi
  echo "Ending result evaluation"
  # Exit value
  exit 0
