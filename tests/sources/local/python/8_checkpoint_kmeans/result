#!/bin/bash -e

  # Obtain parameters
  output_file=$1
  error_file=$2
  target_log_folder=$3
  checkpoint_dir="/tmp/checkpointing/"

  # Log files
  runtime_log="${target_log_folder}/runtime.log"
  resources_log="${target_log_folder}/resources.log"

  #----------------------------------------------------------------------------------
  # Check output standard out status
  if [ -f "${output_file}" ]; then
     result_expected="------------------------------------------------------------"
     test_result=$(tail -1 "${output_file}")

  else
     echo "[ERROR] Output file not found" | tee -a "${output_file}"
     exit 1
  fi
  # Check that ErrorManager has not raised any ERROR or FATAL message
  if [ -f "${error_file}" ]; then
    if grep -E "\\[ERRMGR\\].*(ERROR|FATAL|Shutting down COMPSs)" "${error_file}"; then
      echo "ERROR: ErrorManager has raised a fatal error" | tee -a "${output_file}"
      exit 1
    fi
  else
    # Empty error file, no exceptions could have been raised
    :
  fi
  # Check that the Runtime has not registered any fatal error
  if [ -f "${runtime_log}" ]; then
    if grep -E "ErrorManager\\].*\\[ERRMGR\\].*Error detected. Shutting down COMPSs" "${runtime_log}"; then
      echo "ERROR: ErrorManager has registered a fatal error in the runtime.log" | tee -a "${output_file}"
      exit 1
    fi
  else
    echo "[ERROR] runtime.log not found" | tee -a "${output_file}"
    exit 1
  fi

  #----------------------------------------------------------------------------------


  #----------------------------------------------------------------------------------
  # Compute result status
  #

  # With this test we are checking that the files (INOUT), the accesses from the main are preserved with checkpointing.
  # So for a good behaviour we have to see that only the last version of a file or an access by main are saved (in the
  # case of this application this is that we save only the files of 4 and 6.

  # This execution is divided in two, first we make the execution fail and then we recover it.


  if grep -Fxq "FINAL [array([0.40778208, 0.80152898]), array([0.5673533 , 0.29025373])]" "${output_file}"; then
    echo "CORRECT OUTPUT"
  else
    echo "INCORRECT OUTPUT"
    exit 1
  fi


  #----------------------------------------------------------------------------------
  # Everything ok
  exit 0