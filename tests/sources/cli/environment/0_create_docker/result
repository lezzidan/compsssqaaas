#!/bin/bash -e

   # # Obtain parameters
   output_file=$1
   error_file=$2

   #----------------------------------------------------------------------------------
   # Check output standard out status
   if [ -f "${output_file}" ]; then
      result_expected="Environment ID: docker_env"
      test_result=$(cat "${output_file}" | grep "Environment ID: docker_env")
      if [ "${result_expected}" != "${test_result}" ]; then
         echo "SOME ERROR WAS FOUND. CHECK ERRORS ABOVE." | tee -a "${output_file}"
         exit 1
      fi

      # Check if directory `docker_env` exists in `~/.COMPSs/envs`
      if [ ! -d "${HOME}/.COMPSs/envs/docker_env" ]; then
            echo "[ERROR] Directory `docker_env` not found in `~/.COMPSs/envs`" | tee -a "${output_file}"
            exit 1
      fi
   else
      echo "[ERROR] Output file not found" | tee -a "${output_file}"
      exit 1
   fi
   # Check that ErrorManager has not raised any ERROR or FATAL message
   if [ -f "${error_file}" ]; then
      if grep -iF "error" "${error_file}"; then
         echo "ERROR: Error has raised a fatal error" | tee -a "${output_file}"
         exit 1
      fi
   fi

   pycompss environment remove docker_env
   # check if directory `docker_env` has been removed from `~/.COMPSs/envs`
   if [ -d "${HOME}/.COMPSs/envs/docker_env" ]; then
      echo "[ERROR] Directory `docker_env` not removed from `~/.COMPSs/envs`" | tee -a "${output_file}"
      rm -rf "${HOME}/.COMPSs/envs/docker_env"
      exit 1
   fi

   # check if docker container has been removed
   if [ "$(docker ps -a | grep "pycompss-master-docker_env")" ]; then
      echo "[ERROR] Docker container not removed" | tee -a "${output_file}"
      exit 1
   fi

  #----------------------------------------------------------------------------------
  # Success
  exit 0

