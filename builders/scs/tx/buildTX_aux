#!/bin/bash -e

  #############################################################
  # Name: buildTX_aux
  # Description: SCRIPT FOR LOCAL COMPSs BUILD in ThunderX
  # Parameters: <targetDir>           Base Target Installation folder
  #
  # ATTENTION: DO NOT EXECUTE THIS FILE. IT IS AUTOMATICALLY
  #            EXECUTED FROM buildTX script
  #############################################################

  usage() {
    echo "Incorrect number of parameters"
    echo " Usage: buildTX_aux <FullTargetPath>"
    echo " "
    exit 1
  }

  ####################
  # MAIN
  ####################
  # Get parameters
  if [ $# -ne 1 ]; then
    usage
  fi

  # SET SCRIPT VARIABLES
  targetDir=$1
  SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

  # DEFINE MODULES
  modules="gcc/5.3.0 papi/5.4.3 boost/1.63.0 java/1.8.0_111"
  unload_before_python="ignore"
  run_before_py3_modules="ignore"
  py3_modules="boost/1.63.0"
  run_before_py3_other_modules="ignore"
  py3_other_modules="ignore"

  # DEFINE CONFIGURATION PARAMETERS
  #(Environment vars must be scaped to get the correct value if not it could take a value previous to load the modules)
  additionalExports=""
  additional_module_use_folder="ignore"
  queues_cfg="thunder.cfg"
  extrae_with_openmpi="false"
  openmpi_version="/1.10.2"
  extrae_with_impi="true"
  impi_version=""
  autoparallel="false"
  c_binding="true"
  # shellcheck source=/etc/profile.d/modules.sh
  # shellcheck disable=SC1091
  source /etc/profile.d/modules.sh  # Source

  echo "- The module command has been loaded by sourcing /etc/profile.d/modules.sh"

  # CALL buildSC_aux
  # shellcheck source=../commons/buildSC_aux
  # shellcheck disable=SC1091
  "${SCRIPT_DIR}"/buildSC_aux "${targetDir}" "${modules}" "${unload_before_python}" "${run_before_py3_modules}" "${py3_modules}" "${run_before_py3_other_modules}" "${py3_other_modules}" "${additionalExports}" "${additional_module_use_folder}" "${queues_cfg}" "${extrae_with_openmpi}" "${openmpi_version}" "${extrae_with_impi}" "${impi_version}" "${autoparallel}" "${c_binding}"
  ev=$?

  # End
  if [ $ev -ne 0 ]; then
    echo "ERROR: Exception in auxiliar script"
    exit $ev
  fi
  exit 0
