#!/bin/bash

  #############################################################
  # Name: buildDardel_aux
  # Description: SCRIPT FOR LOCAL COMPSs BUILD in Dardel
  # Parameters: <targetDir>           Base Target Installation folder
  #
  # ATTENTION: DO NOT EXECUTE THIS FILE. IT IS AUTOMATICALLY
  #            EXECUTED FROM buildDardel script
  #############################################################

  usage() {
    echo "Incorrect number of parameters"
    echo " Usage: buildDardel_aux <FullTargetPath>"
    echo " "
    exit 1
  }

  ####################
  # MAIN
  ####################
  # Get parameters
  if [ $# -ne 1 ]; then
    usage
  fi

  # SET SCRIPT VARIABLES
  targetDir=$1
  SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

  # DEFINE MODULES
  modules="craype-x86-rome libfabric/1.11.0.4.67 craype-network-ofi perftools-base/21.10.0 xpmem/2.2.40-7.0.1.0_2.4__g1d7a24d.shasta cce/13.0.0 craype/2.7.12 cray-dsmml/0.2.2 cray-mpich/8.1.11 cray-libsci/21.08.1.2 PrgEnv-cray/8.2.0 snic-env/1.0.0 systemdefault/1.0.0 PDC Java/17.0.4 PrgEnv-gnu Autoconf Automake libtool/2.4.6-cpeGNU-21.11 Boost/1.77.0-python3-cpeGNU-21.11 libxml2/2.9.12"
  unload_before_python="ignore"
  # Plain python modules:
  run_before_py3_modules="ignore"
  py3_modules="cray-python/3.9.4.2"
  # Python modules with jupyter:
  run_before_py3_other_modules="ignore"
  py3_other_modules="cray-python/3.9.4.1 cray-python/3.9.7.1"

  # DEFINE CONFIGURATION PARAMETERS
  #(Environment vars must be scaped to get the correct value if not it could take a value previous to load the modules)
  additionalExports=""

  additional_module_use_folder="ignore"
  queues_cfg="dardel.cfg"
  extrae_with_openmpi="false"
  openmpi_version=""
  extrae_with_impi="false"
  impi_version=""
  autoparallel="false"
  c_binding="true"

  # CALL buildSC_aux
  "${SCRIPT_DIR}"/buildSC_aux "${targetDir}" "${modules}" "${unload_before_python}" "${run_before_py3_modules}" "${py3_modules}" "${run_before_py3_other_modules}" "${py3_other_modules}" "${additionalExports}" "${additional_module_use_folder}" "${queues_cfg}" "${extrae_with_openmpi}" "${openmpi_version}" "${extrae_with_impi}" "${impi_version}" "${autoparallel}" "${c_binding}"
  ev=$?

  # End
  if [ $ev -ne 0 ]; then
    echo "ERROR: Exception in auxiliar script"
    exit $ev
  fi
  exit 0
